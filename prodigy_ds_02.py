# -*- coding: utf-8 -*-
"""PRODIGY_DS_02

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zCY_RHR8PlRe3AdrFphJfOzPPNUiCyhn
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the datasets
train_df = pd.read_csv('/content/train (1).csv')
test_df = pd.read_csv('/content/test (1).csv')

# Display the first few rows and info
train_df.head()
train_df.info()
train_df.describe()

# Handling missing values

# For 'Age', we'll fill missing values with the median age
train_df['Age'].fillna(train_df['Age'].median(), inplace=True)

# For 'Cabin', we'll fill missing values with 'Unknown'
train_df['Cabin'].fillna('Unknown', inplace=True)

# For 'Embarked', we'll fill missing values with the most frequent value
train_df['Embarked'].fillna(train_df['Embarked'].mode()[0], inplace=True)

# Verify that there are no more missing values
train_df.isnull().sum()

# Exploratory Data Analysis (EDA)
# 1. Distribution of numerical features
fig, axs = plt.subplots(2, 3, figsize=(18, 12))

sns.histplot(data=train_df, x="Age", kde=True, ax=axs[0, 0])
axs[0, 0].set_title('Age Distribution')

sns.histplot(data=train_df, x="Fare", kde=True, ax=axs[0, 1])
axs[0, 1].set_title('Fare Distribution')

sns.countplot(data=train_df, x="SibSp", ax=axs[0, 2])
axs[0, 2].set_title('Number of Siblings/Spouses Aboard')

sns.countplot(data=train_df, x="Parch", ax=axs[1, 0])
axs[1, 0].set_title('Number of Parents/Children Aboard')

sns.countplot(data=train_df, x="Pclass", ax=axs[1, 1])
axs[1, 1].set_title('Passenger Class Distribution')

sns.countplot(data=train_df, x="Embarked", ax=axs[1, 2])
axs[1, 2].set_title('Port of Embarkation Distribution')

plt.tight_layout()
plt.show()

# 2. Survival rate based on different features
fig, axs = plt.subplots(2, 3, figsize=(18, 12))

# Survival rate by sex
sns.countplot(data=train_df, x='Sex', hue='Survived', ax=axs[0, 0])
axs[0, 0].set_title('Survival Count by Sex')

# Survival rate by passenger class
sns.countplot(data=train_df, x='Pclass', hue='Survived', ax=axs[0, 1])
axs[0, 1].set_title('Survival Count by Passenger Class')

# Survival rate by embarkation point
sns.countplot(data=train_df, x='Embarked', hue='Survived', ax=axs[0, 2])
axs[0, 2].set_title('Survival Count by Embarkation Point')

# Survival rate by age (binned)
train_df['AgeBin'] = pd.cut(train_df['Age'], bins=[0, 12, 18, 35, 60, 80], labels=['Child', 'Teen', 'Adult', 'Middle Age', 'Senior'])
sns.countplot(data=train_df, x='AgeBin', hue='Survived', ax=axs[1, 0])
axs[1, 0].set_title('Survival Count by Age Group')

# Survival rate by fare (binned)
train_df['FareBin'] = pd.cut(train_df['Fare'], bins=[0, 25, 50, 100, 200, 600], labels=['0-25', '25-50', '50-100', '100-200', '200+'])
sns.countplot(data=train_df, x='FareBin', hue='Survived', ax=axs[1, 1])
axs[1, 1].set_title('Survival Count by Fare Category')

# Drop temporary columns used for visualization
train_df.drop(['AgeBin', 'FareBin'], axis=1, inplace=True)

plt.tight_layout()
plt.show()